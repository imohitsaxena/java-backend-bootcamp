"use strict";(self.webpackChunkjavabrains_bootcamp=self.webpackChunkjavabrains_bootcamp||[]).push([[53],{1109:a=>{a.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"javaBackendBootcamp":[{"type":"link","label":"The ULTIMATE Java Backend Bootcamp","href":"/java-backend-bootcamp/docs/java-backend-bootcamp/","docId":"java-backend-bootcamp/index"},{"type":"category","label":"Java Basics","items":[{"type":"link","label":"Java Basic Data Types","href":"/java-backend-bootcamp/docs/java-backend-bootcamp/java-basics/basic-data-types","docId":"java-backend-bootcamp/java-basics/basic-data-types"},{"type":"link","label":"Java Operators","href":"/java-backend-bootcamp/docs/java-backend-bootcamp/java-basics/java-operators","docId":"java-backend-bootcamp/java-basics/java-operators"},{"type":"link","label":"Arrays in Java","href":"/java-backend-bootcamp/docs/java-backend-bootcamp/java-basics/arrays","docId":"java-backend-bootcamp/java-basics/arrays"},{"type":"link","label":"Classes","href":"/java-backend-bootcamp/docs/java-backend-bootcamp/java-basics/classes","docId":"java-backend-bootcamp/java-basics/classes"},{"type":"link","label":"Inheritance","href":"/java-backend-bootcamp/docs/java-backend-bootcamp/java-basics/inheritance","docId":"java-backend-bootcamp/java-basics/inheritance"},{"type":"link","label":"Nested and Inner Classes in Java","href":"/java-backend-bootcamp/docs/java-backend-bootcamp/java-basics/nested-and-inner-classes","docId":"java-backend-bootcamp/java-basics/nested-and-inner-classes"}],"collapsed":true,"collapsible":true,"href":"/java-backend-bootcamp/docs/java-basics"},{"type":"category","label":"Java Collections","items":[{"type":"link","label":"Introduction to Collections","href":"/java-backend-bootcamp/docs/java-backend-bootcamp/java-collections/introduction","docId":"java-backend-bootcamp/java-collections/introduction"},{"type":"link","label":"Generalization with Interfaces","href":"/java-backend-bootcamp/docs/java-backend-bootcamp/java-collections/generalization-with-interfaces","docId":"java-backend-bootcamp/java-collections/generalization-with-interfaces"},{"type":"link","label":"Object equality and hashcode","href":"/java-backend-bootcamp/docs/java-backend-bootcamp/java-collections/object-equality-and-hashcode","docId":"java-backend-bootcamp/java-collections/object-equality-and-hashcode"},{"type":"link","label":"Time Complexity and Big O","href":"/java-backend-bootcamp/docs/java-backend-bootcamp/java-collections/time-complexity-and-big-o","docId":"java-backend-bootcamp/java-collections/time-complexity-and-big-o"},{"type":"link","label":"The List interface","href":"/java-backend-bootcamp/docs/java-backend-bootcamp/java-collections/the-list-interface","docId":"java-backend-bootcamp/java-collections/the-list-interface"},{"type":"link","label":"Comparable and Comparator","href":"/java-backend-bootcamp/docs/java-backend-bootcamp/java-collections/comparable-and-comparator","docId":"java-backend-bootcamp/java-collections/comparable-and-comparator"},{"type":"link","label":"The Set interface","href":"/java-backend-bootcamp/docs/java-backend-bootcamp/java-collections/the-set-interface","docId":"java-backend-bootcamp/java-collections/the-set-interface"},{"type":"link","label":"The Map interface","href":"/java-backend-bootcamp/docs/java-backend-bootcamp/java-collections/the-map-interface","docId":"java-backend-bootcamp/java-collections/the-map-interface"}],"collapsed":true,"collapsible":true,"href":"/java-backend-bootcamp/docs/java-collections"},{"type":"category","label":"Java Lambdas and Streams","items":[{"type":"link","label":"Functional programming","href":"/java-backend-bootcamp/docs/java-backend-bootcamp/lambdas-and-streams/functional-programming","docId":"java-backend-bootcamp/lambdas-and-streams/functional-programming"},{"type":"link","label":"Lambda Expressions","href":"/java-backend-bootcamp/docs/java-backend-bootcamp/lambdas-and-streams/lambda-expressions","docId":"java-backend-bootcamp/lambdas-and-streams/lambda-expressions"},{"type":"link","label":"Custom Functional Interfaces","href":"/java-backend-bootcamp/docs/java-backend-bootcamp/lambdas-and-streams/custom-interfaces","docId":"java-backend-bootcamp/lambdas-and-streams/custom-interfaces"},{"type":"link","label":"Best Practices","href":"/java-backend-bootcamp/docs/java-backend-bootcamp/lambdas-and-streams/best-practices","docId":"java-backend-bootcamp/lambdas-and-streams/best-practices"},{"type":"link","label":"Advanced Concepts","href":"/java-backend-bootcamp/docs/java-backend-bootcamp/lambdas-and-streams/advanced-concepts","docId":"java-backend-bootcamp/lambdas-and-streams/advanced-concepts"},{"type":"link","label":"Java Streams","href":"/java-backend-bootcamp/docs/java-backend-bootcamp/lambdas-and-streams/java-streams","docId":"java-backend-bootcamp/lambdas-and-streams/java-streams"}],"collapsed":true,"collapsible":true,"href":"/java-backend-bootcamp/docs/lambdas-and-streams"}]},"docs":{"intro":{"id":"intro","title":"Tutorial Intro","description":"Let\'s discover Docusaurus in less than 5 minutes."},"java-backend-bootcamp/exceptions":{"id":"java-backend-bootcamp/exceptions","title":"Exception handling","description":"Java provides a robust mechanism for handling exceptions, which are events that occur during the execution of a program that disrupt the normal flow of instructions. Exceptions can be caused by a variety of factors, such as attempting to access an array index that is out of bounds, or trying to read from a file that does not exist."},"java-backend-bootcamp/index":{"id":"java-backend-bootcamp/index","title":"The ULTIMATE Java Backend Bootcamp","description":"","sidebar":"javaBackendBootcamp"},"java-backend-bootcamp/java-basics/arrays":{"id":"java-backend-bootcamp/java-basics/arrays","title":"Arrays in Java","description":"An array is a data structure that holds a fixed number of values of the same type. These values can be accessed by their index, which is an integer value that ranges from 0 to the size of the array minus 1. In Java, arrays are objects and are created with the new keyword.","sidebar":"javaBackendBootcamp"},"java-backend-bootcamp/java-basics/basic-data-types":{"id":"java-backend-bootcamp/java-basics/basic-data-types","title":"Java Basic Data Types","description":"Java has two types of data types: primitive and non-primitive.","sidebar":"javaBackendBootcamp"},"java-backend-bootcamp/java-basics/classes":{"id":"java-backend-bootcamp/java-basics/classes","title":"Classes","description":"A class in Java is a blueprint for creating objects, which are instances of the class. A class defines the properties and methods that an object of that class will have. In other words, a class is a template for creating objects, and an object is an instance of a class.","sidebar":"javaBackendBootcamp"},"java-backend-bootcamp/java-basics/inheritance":{"id":"java-backend-bootcamp/java-basics/inheritance","title":"Inheritance","description":"Inheritance is one of the key concepts in object-oriented programming. Inheritance allows a class to inherit properties and methods from another class, which helps to reduce code duplication and improves code reusability.","sidebar":"javaBackendBootcamp"},"java-backend-bootcamp/java-basics/java-operators":{"id":"java-backend-bootcamp/java-basics/java-operators","title":"Java Operators","description":"Java has a variety of operators that can be used to perform operations on variables and values. These operators can be grouped into three main categories:","sidebar":"javaBackendBootcamp"},"java-backend-bootcamp/java-basics/nested-and-inner-classes":{"id":"java-backend-bootcamp/java-basics/nested-and-inner-classes","title":"Nested and Inner Classes in Java","description":"In Java, a class can be defined inside another class, which is known as a nested class. There are two types of nested classes in Java: static nested classes and inner classes.","sidebar":"javaBackendBootcamp"},"java-backend-bootcamp/java-collections/comparable-and-comparator":{"id":"java-backend-bootcamp/java-collections/comparable-and-comparator","title":"Comparable and Comparator","description":"In Java, Comparable and Comparator are two interfaces that are used to sort collections of objects.","sidebar":"javaBackendBootcamp"},"java-backend-bootcamp/java-collections/generalization-with-interfaces":{"id":"java-backend-bootcamp/java-collections/generalization-with-interfaces","title":"Generalization with Interfaces","description":"In Object Oriented Programming, interfaces are a way to define a contract for a group of related classes. An interface defines a set of method signatures, but does not provide an implementation for those methods. Classes that implement the interface must provide an implementation for all of the methods defined in the interface.","sidebar":"javaBackendBootcamp"},"java-backend-bootcamp/java-collections/introduction":{"id":"java-backend-bootcamp/java-collections/introduction","title":"Introduction to Collections","description":"The Java Collections framework is a set of classes and interfaces that provide a consistent and efficient way to manage collections of data. The main purpose of the framework is to provide a standard way of representing and manipulating collections of objects in Java. The framework is implemented in the java.util package and includes several interfaces and classes that can be used to create and manipulate collections of data.","sidebar":"javaBackendBootcamp"},"java-backend-bootcamp/java-collections/object-equality-and-hashcode":{"id":"java-backend-bootcamp/java-collections/object-equality-and-hashcode","title":"Object equality and hashcode","description":"Object equality","sidebar":"javaBackendBootcamp"},"java-backend-bootcamp/java-collections/the-list-interface":{"id":"java-backend-bootcamp/java-collections/the-list-interface","title":"The List interface","description":"Introduction","sidebar":"javaBackendBootcamp"},"java-backend-bootcamp/java-collections/the-map-interface":{"id":"java-backend-bootcamp/java-collections/the-map-interface","title":"The Map interface","description":"Introduction","sidebar":"javaBackendBootcamp"},"java-backend-bootcamp/java-collections/the-set-interface":{"id":"java-backend-bootcamp/java-collections/the-set-interface","title":"The Set interface","description":"Introduction","sidebar":"javaBackendBootcamp"},"java-backend-bootcamp/java-collections/time-complexity-and-big-o":{"id":"java-backend-bootcamp/java-collections/time-complexity-and-big-o","title":"Time Complexity and Big O","description":"Introduction to Time Complexity","sidebar":"javaBackendBootcamp"},"java-backend-bootcamp/lambdas-and-streams/advanced-concepts":{"id":"java-backend-bootcamp/lambdas-and-streams/advanced-concepts","title":"Advanced Concepts","description":"In this section, we will cover advanced topics in lambda expressions and functional interfaces, including type inference, variable capture, and functional composition.","sidebar":"javaBackendBootcamp"},"java-backend-bootcamp/lambdas-and-streams/best-practices":{"id":"java-backend-bootcamp/lambdas-and-streams/best-practices","title":"Best Practices","description":"Lambda expressions and functional interfaces are powerful features that allow for more concise and expressive code. However, to make the most of these features, it\'s important to follow certain best practices. In this lecture, we will cover best practices for writing lambda expressions and functional interfaces, including considerations for performance, debugging, and testing.","sidebar":"javaBackendBootcamp"},"java-backend-bootcamp/lambdas-and-streams/custom-interfaces":{"id":"java-backend-bootcamp/lambdas-and-streams/custom-interfaces","title":"Custom Functional Interfaces","description":"A functional interface is an interface that contains exactly one abstract method. In Java 8, several functional interfaces were added to the java.util.function package, such as Predicate, Consumer, and Function. However, in certain situations, you may need to create your own functional interface. In this section, we will cover how to create custom functional interfaces and provide examples of their use.","sidebar":"javaBackendBootcamp"},"java-backend-bootcamp/lambdas-and-streams/functional-programming":{"id":"java-backend-bootcamp/lambdas-and-streams/functional-programming","title":"Functional programming","description":"Introduction to Functional Programming","sidebar":"javaBackendBootcamp"},"java-backend-bootcamp/lambdas-and-streams/java-streams":{"id":"java-backend-bootcamp/lambdas-and-streams/java-streams","title":"Java Streams","description":"Introduction to Streams","sidebar":"javaBackendBootcamp"},"java-backend-bootcamp/lambdas-and-streams/lambda-expressions":{"id":"java-backend-bootcamp/lambdas-and-streams/lambda-expressions","title":"Lambda Expressions","description":"Introduction","sidebar":"javaBackendBootcamp"},"tutorial-basics/congratulations":{"id":"tutorial-basics/congratulations","title":"Congratulations!","description":"You have just learned the basics of Docusaurus and made some changes to the initial template."},"tutorial-basics/create-a-blog-post":{"id":"tutorial-basics/create-a-blog-post","title":"Create a Blog Post","description":"Docusaurus creates a page for each blog post, but also a blog index page, a tag system, an RSS feed..."},"tutorial-basics/create-a-document":{"id":"tutorial-basics/create-a-document","title":"Create a Document","description":"Documents are groups of pages connected through:"},"tutorial-basics/create-a-page":{"id":"tutorial-basics/create-a-page","title":"Create a Page","description":"Add Markdown or React files to src/pages to create a standalone page:"},"tutorial-basics/deploy-your-site":{"id":"tutorial-basics/deploy-your-site","title":"Deploy your site","description":"Docusaurus is a static-site-generator (also called Jamstack)."},"tutorial-basics/markdown-features":{"id":"tutorial-basics/markdown-features","title":"Markdown Features","description":"Docusaurus supports Markdown and a few additional features."},"tutorial-extras/manage-docs-versions":{"id":"tutorial-extras/manage-docs-versions","title":"Manage Docs Versions","description":"Docusaurus can manage multiple versions of your docs."},"tutorial-extras/translate-your-site":{"id":"tutorial-extras/translate-your-site","title":"Translate your site","description":"Let\'s translate docs/intro.md to French."}}}')}}]);